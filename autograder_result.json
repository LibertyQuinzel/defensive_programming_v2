{
  "returncode": 1,
  "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.7, pytest-8.4.2, pluggy-1.6.0 -- /usr/bin/python\ncachedir: .pytest_cache\nrootdir: /home/haseeb/Documents/college/IS601/defensive_programming_v2\nconfigfile: pyproject.toml\nplugins: time-machine-2.19.0, anyio-4.10.0, asyncio-0.26.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 54 items\n\ntopics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_regular FAILED [  1%]\ntopics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_empty FAILED [  3%]\ntopics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_type_error FAILED [  5%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_validated_greet_happy PASSED [  7%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_validated_greet_empty PASSED [  9%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_validated_greet_type_error PASSED [ 11%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_greet_happy FAILED [ 12%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_greet_empty FAILED [ 14%]\ntopics/00-intro/test_template_for_students_00_intro.py::test_greet_type_error FAILED [ 16%]\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_happy FAILED [ 18%]\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_type_error FAILED [ 20%]\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_divide_by_zero FAILED [ 22%]\ntopics/01-guard-clauses/test_operations_defensive.py::test_add_invalid_operand PASSED [ 24%]\ntopics/01-guard-clauses/test_operations_defensive.py::test_multiply_invalid_operand PASSED [ 25%]\ntopics/01-guard-clauses/test_operations_defensive.py::test_divide_by_zero PASSED [ 27%]\ntopics/01-guard-clauses/test_operations_defensive.py::test_divide_and_add_happy_path PASSED [ 29%]\ntopics/01-guard-clauses/test_template_for_students.py::test_validated_add_happy PASSED [ 31%]\ntopics/01-guard-clauses/test_template_for_students.py::test_validated_add_rejects_bool PASSED [ 33%]\ntopics/01-guard-clauses/test_template_for_students.py::test_guarded_divide_happy FAILED [ 35%]\n\n=================================== FAILURES ===================================\n______________________________ test_greet_regular ______________________________\ntopics/00-intro/instructor_tests/test_partA_00_intro.py:18: in test_greet_regular\n    assert skeleton.greet(\"Alice\") == \"Hello, Alice\"\n           ^^^^^^^^^^^^^^^^^^^^^^^\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n_______________________________ test_greet_empty _______________________________\ntopics/00-intro/instructor_tests/test_partA_00_intro.py:22: in test_greet_empty\n    assert skeleton.greet(\"\") == \"Hello, stranger\"\n           ^^^^^^^^^^^^^^^^^^\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n____________________________ test_greet_type_error _____________________________\ntopics/00-intro/instructor_tests/test_partA_00_intro.py:27: in test_greet_type_error\n    skeleton.greet(123)\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n_______________________________ test_greet_happy _______________________________\ntopics/00-intro/test_template_for_students_00_intro.py:45: in test_greet_happy\n    assert skeleton.greet(\"Alice\") == \"Hello, Alice\"\n           ^^^^^^^^^^^^^^^^^^^^^^^\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n_______________________________ test_greet_empty _______________________________\ntopics/00-intro/test_template_for_students_00_intro.py:50: in test_greet_empty\n    assert skeleton.greet(\"\") == \"Hello, stranger\"\n           ^^^^^^^^^^^^^^^^^^\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n____________________________ test_greet_type_error _____________________________\ntopics/00-intro/test_template_for_students_00_intro.py:56: in test_greet_type_error\n    skeleton.greet(123)\ntopics/00-intro/skeleton.py:30: in greet\n    raise NotImplementedError(\"Implement greet(name) in the skeleton for Part B\")\nE   NotImplementedError: Implement greet(name) in the skeleton for Part B\n__________________________ test_guarded_divide_happy ___________________________\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py:17: in test_guarded_divide_happy\n    assert skeleton.guarded_divide(10, 2) == 5\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntopics/01-guard-clauses/skeleton.py:94: in guarded_divide\n    raise NotImplementedError(\"Implement guarded_divide(a, b) in the skeleton for Part B\")\nE   NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\n________________________ test_guarded_divide_type_error ________________________\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py:22: in test_guarded_divide_type_error\n    skeleton.guarded_divide(\"10\", 2)\ntopics/01-guard-clauses/skeleton.py:94: in guarded_divide\n    raise NotImplementedError(\"Implement guarded_divide(a, b) in the skeleton for Part B\")\nE   NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\n______________________ test_guarded_divide_divide_by_zero ______________________\ntopics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py:27: in test_guarded_divide_divide_by_zero\n    skeleton.guarded_divide(1, 0)\ntopics/01-guard-clauses/skeleton.py:94: in guarded_divide\n    raise NotImplementedError(\"Implement guarded_divide(a, b) in the skeleton for Part B\")\nE   NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\n__________________________ test_guarded_divide_happy ___________________________\ntopics/01-guard-clauses/test_template_for_students.py:107: in test_guarded_divide_happy\n    assert skeleton.guarded_divide(10, 2) == 5\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntopics/01-guard-clauses/skeleton.py:94: in guarded_divide\n    raise NotImplementedError(\"Implement guarded_divide(a, b) in the skeleton for Part B\")\nE   NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\n=========================== short test summary info ============================\nFAILED topics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_regular - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_empty - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/00-intro/instructor_tests/test_partA_00_intro.py::test_greet_type_error - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/00-intro/test_template_for_students_00_intro.py::test_greet_happy - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/00-intro/test_template_for_students_00_intro.py::test_greet_empty - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/00-intro/test_template_for_students_00_intro.py::test_greet_type_error - NotImplementedError: Implement greet(name) in the skeleton for Part B\nFAILED topics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_happy - NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\nFAILED topics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_type_error - NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\nFAILED topics/01-guard-clauses/instructor_tests/test_partA_01_guarded_divide.py::test_guarded_divide_divide_by_zero - NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\nFAILED topics/01-guard-clauses/test_template_for_students.py::test_guarded_divide_happy - NotImplementedError: Implement guarded_divide(a, b) in the skeleton for Part B\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 10 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n========================= 10 failed, 9 passed in 0.14s =========================\n",
  "stderr": "",
  "summary": {
    "tests_passed": 9,
    "tests_failed": 20,
    "tests_errors": 0,
    "tests_skipped": 0,
    "failed_test_names": [
      "test_greet_regular",
      "test_greet_empty",
      "test_greet_type_error",
      "test_greet_happy",
      "test_greet_empty",
      "test_greet_type_error",
      "test_guarded_divide_happy",
      "test_guarded_divide_type_error",
      "test_guarded_divide_divide_by_zero",
      "test_guarded_divide_happy",
      "test_greet_regular",
      "test_greet_empty",
      "test_greet_type_error",
      "test_greet_happy",
      "test_greet_empty",
      "test_greet_type_error",
      "test_guarded_divide_happy",
      "test_guarded_divide_type_error",
      "test_guarded_divide_divide_by_zero",
      "test_guarded_divide_happy"
    ]
  },
  "hints": [
    "\ud83d\udca1 Check the error messages above for specific guidance",
    "   Review the assignment documentation for requirements"
  ],
  "success": false
}